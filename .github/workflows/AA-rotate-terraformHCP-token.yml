name: AA-rotate-terraformHCP-token

on:
  schedule:
    - cron: "0 0 1 * *" # Runs on the 1st of every month. 30 days of expiration time

  # Allows you to run this workflow manually from the Actions tab 
  workflow_dispatch:

  
jobs:
  rotate-token:
    runs-on: ubuntu-latest

    # Inside my workspace, I'm going to use a Team Token for GitHub Actions.
    # In my case, It uses owners team, however, you should create a new team with limitations.
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Rotate Terraform API Token
        env: 
          BACKEND_ORGANIZATION: ${{ secrets.BACKEND_ORGANIZATION }}
          OLD_TOKEN: ${{ secrets.TF_API_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Provides authentication for the GitHub CLI
        run: |
          # Example of how you could interact with the Terraform API to rotate the token
          # and then update the GitHub secret with the new token.
          BACKEND_ORGANIZATION=$BACKEND_ORGANIZATION
          OLD_TOKEN=$OLD_TOKEN
          AUTH_HEADER="Authorization: Bearer $OLD_TOKEN"
          NEW_TOKEN=$(curl -X POST https://app.terraform.io/api/v2/organizations/$BACKEND_ORGANIZATION/authentication-tokens -H "$AUTH_HEADER" | jq .new_token)

          # Check if the new token was successfully retrieved
          if [ -n "$NEW_TOKEN" ]; then
            # Update GitHub secret with the new token
            gh secret set TF_API_TOKEN -b "$NEW_TOKEN"
            echo "GitHub secret updated successfully."
          else
            echo "Failed to retrieve new token."
            exit 1
          fi
          
